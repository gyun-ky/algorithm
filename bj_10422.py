# 올바른 괄호 문자열 ()
# SSSS가 올바른 괄호 문자열이면 - > (SSSS) 도 올바른 괄호 문자열
# SSSS + SSSS 도 올바른 괄호 문자열

# 올바른 괄호 문자열의 개수

T = int(input())

dp = [[0]*5001]
dp[2] = 1
dp[4] = 2
dp[6] = 1 + dp[4] + 2(dp[4]-1) 

for i in range(4, 2500):

    dp[2*i] = 1 + dp[2*i-2] + 2*(dp[2*i-2]-1) - 2(i-4)+1

for _ in range(T):
    length = int(input())

    print(dp[length])
    

    # 길이가 1 -> 0 (  )
    # 길이가 2 -> 1 ()
    # 길이가 3 -> 0 ()) (()
    # 길이가 4 -> 2 ()()  (()) 
    # 길이가 5 -> 0 ()()) (()() ((()) (()))  ---> 길이4에 * 2
    # 길이가 6 ->   ()()() | ()(()) (())() | (()()) ((())) ---> 2*ans[6-4] + ans[6-2] + 1(단일 나열)
    # 길이가 8 ->   ()()()() | ()()(()) ()(())() 중복있었음  (())()()  ()(()()) (()())()  ()((())) ((()))()  | (()(())) ((())()) ((()())) (((())))
    # 길이가 10 -> ()()()(()) ()()(())() ()()(())() ()(())()() ()(())()() (())()()() ()()(()()) ()(()())() ()(()())() (()())()() ()()((())) ()((()))()
    # 1 <= L <= 5000
    # 모든 홀수는 0
    # 짝수일 때, 

    # 길이가 4인 것 기준
    # 괄호 안쪽 ((())) (()()) ans[2] - 대칭
    # 그냥 1 더하기
    # 2*(ans[2]-1)-(2(i)-1)

    # 6일 때는 0빼기 i = 3 
    # 8일 때는 1빼기 i = 4      2(i-4)+1
    # 10 일 때는 3 빼기 i = 5

    




